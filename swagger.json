{
  "swaggerDefinition": {
    "openapi": "3.0.0",
    "info": {
      "title": "Online Shop",
      "description": "Online Shop API Information",
      "termsOfService": "https://smartbear.com/term-of-use",
      "version": "1.0.0",
      "contact": {
        "name": "API Support",
        "url": "http://www.example.com/support",
        "email": "support@example.com"
      }
    },
    "servers": [
      {
        "url": "http://localhost:5000/api/v1",
        "description": "Development server"
      },
      {
        "url": "http://test.localhost:5000/api/v1",
        "description": "Staging server"
      },
      {
        "url": "http://prod.localhost:5000/api/v1",
        "description": "Production server"
      }
    ],
    "schemes": ["http"],
    "tags": [
      {
        "name": "Users",
        "description": "All about users data request"
      }
    ],
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "name": {
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": ["user", "admin"]
            }
          },
          "example": {
            "id": "5ebac534954b54139806c112",
            "email": "fake@example.com",
            "name": "fake name",
            "role": "user"
          }
        },
        "Token": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            },
            "expires": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg",
            "expires": "2020-05-12T16:18:04.793Z"
          }
        },
        "AuthTokens": {
          "type": "object",
          "properties": {
            "access": {
              "$ref": "#/components/schemas/Token"
            },
            "refresh": {
              "$ref": "#/components/schemas/Token"
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "number"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "responses": {
        "DuplicateEmail": {
          "description": "Email already taken",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "code": 400,
                "message": "Email already taken"
              }
            }
          }
        },
        "Unauthorized": {
          "type": "object",
          "properties": {
            "status": { "type": "string", "example": "fail" },
            "message": {
              "type": "string",
              "example": "You are not logged in! Please log in to get access"
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "code": 403,
                "message": "Forbidden"
              }
            }
          }
        },
        "NotFound": {
          "description": "Not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              },
              "example": {
                "code": 404,
                "message": "Not found"
              }
            }
          }
        },
        "GetUsers": {
          "type": "object",
          "properties": {
            "status": { "type": "string", "example": "success" },
            "count": { "type": "number", "example": "50" },
            "results": { "type": "number", "example": "10" },
            "data": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number", "example": "50" },
                      "name": { "type": "string", "example": "WAYNE WATSICA" },
                      "email": {
                        "type": "string",
                        "example": "carleton.bogisich33@hotmail.com"
                      },
                      "phoneNumber": { "type": "string", "example": "4267027649" },
                      "password": {
                        "type": "string",
                        "example": "$2a$08$J.gYPG4tIeOTsTsOPauC5OC.6uinjSExXJhrPuXIrvPrsVp18T45S"
                      },
                      "photo": {
                        "type": "string",
                        "example": "https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg"
                      },
                      "role": { "type": "string", "example": "admin" },
                      "apiKey": {
                        "type": "string",
                        "example": "0xccc438e34ed6ed3fc878cbab44c2184e0e3c8a12"
                      },
                      "active": { "type": "boolean", "example": "true" },
                      "activationToken": {
                        "type": "string",
                        "example": "MAMoZACciDkNMzcyaiCj9FAkFvAX"
                      },
                      "resetToken": {
                        "type": "string",
                        "nullable": true,
                        "example": "null"
                      },
                      "createdAt": {
                        "type": "date",
                        "nullable": true,
                        "example": "2020-11-06 13:49:28"
                      },
                      "updatedAt": {
                        "type": "date",
                        "nullable": true,
                        "example": "2020-11-06 13:49:28"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "parameters": {
        "page": {
          "in": "query",
          "name": "page",
          "example": 1,
          "description": "Active page number"
        },
        "limit": {
          "in": "query",
          "name": "limit",
          "example": 10,
          "description": "Total rows per-page"
        }
      }
    }
  },
  "apis": ["./routes/*.js"]
}
